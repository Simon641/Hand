import cv2
import time
import HandTrackingModule as htm
from djitellopy import Tello
from time import sleep

tello = Tello()
tello.connect()

print(tello.get_battery())
cap = tello.streamon()


pTime = 0

detector = htm.handDetector(detectionCon=0.75)

tipIds = [ 4, 8, 12, 16, 20]

tello.takeoff()

while True:


    #success, img = cap.read()
    img = tello.get_frame_read().frame
    img = detector.findHands(img)
    lmList = detector.findPosition(img, draw=False)
    img = cv2.resize(img, (360, 240))

    if len(lmList) != 0:
        fingers = []
        # Thumb
        if lmList[tipIds[0]][1] < lmList[tipIds[0] - 1][1]:
            fingers.append(1)


        else:
            fingers.append(0)


        # 4 Fingers besides thumb
        for id in range (1,5):
            if lmList[tipIds[id]][2] < lmList[tipIds[id]-2][2]:
                fingers.append(1)
            else:
                fingers.append(0)


        totalFingers = fingers.count(1)
        if totalFingers == 1:
            tello.move_up(100)
            sleep(1)
            tello.streamoff()
            tello.streamon()
        if totalFingers == 2:
            tello.move_down(100)
            sleep(1)
            tello.streamoff()
            tello.streamon()
        if totalFingers == 3:
            tello.move_forward(100)
            sleep(1)
            tello.streamoff()
            tello.streamon()
        if totalFingers == 4:
            tello.move_back(100)
            sleep(1)
            tello.streamoff()
            tello.streamon()
        if totalFingers == 0:
            tello.land()








    cTime = time.time()
    fps = 1/(cTime-pTime)
    pTime = cTime

    cv2.putText(img, f'FPS: {int(fps)}', (400, 70), cv2.FONT_HERSHEY_PLAIN,
                3, (255, 0, 0 ), 3)
    cv2.imshow("Image", img)
    cv2.waitKey(1)
